The symbolic summary of the old method 
(or (and (= REAL_2 (to_real UF_c_1)) (>= x 0) (< x 7) (>= x 5) (= Ret REAL_2))
    (and (>= x 7) (>= x 5) (= Ret 0.0))
    (and (< x 5) (= Ret 0.0)))
The symbolic summary of the new method 
(or (and (= REAL_2 (to_real UF_c_1)) (>= x 0) (< x 7) (>= x 5) (= Ret REAL_2))
    (and (>= x 7) (>= x 5) (= Ret 0.0))
    (and (< x 5) (= Ret 0.0)))Constraint solving : 
(declare-fun REAL_2 () Real)
(declare-fun UF_c_1 () Int)(declare-fun x () Int)
(declare-fun Ret () Real)
(let ((a!1 (or (and (= REAL_2 (to_real UF_c_1))
                    (>= x 0)
                    (< x 7)
                    (>= x 5)
                    (= Ret REAL_2))
               (and (>= x 7) (>= x 5) (= Ret 0.0))
               (and (< x 5) (= Ret 0.0)))))
  (not (= a!1 a!1)))

The symbolic summary of the old method 
(let ((a!1 (= REAL_4 (to_real (+ (UF_c_1 a b 0) 1)))))
  (and a!1 (= Ret REAL_4)))
The symbolic summary of the new method 
(and (= REAL_4 (to_real (UF_c_1 a b 1))) (= Ret REAL_4))Constraint solving : 
(declare-fun REAL_4 () Real)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun UF_c_1 (Int Int Int ) Int)(declare-fun Ret () Real)
(let ((a!1 (= REAL_4 (to_real (+ (UF_c_1 a b 0) 1))))
      (a!2 (and (= REAL_4 (to_real (UF_c_1 a b 1))) (= Ret REAL_4))))
  (not (= (and a!1 (= Ret REAL_4)) a!2)))


Model : 
(define-fun b () Int
  3)
(define-fun a () Int
  2)
(define-fun Ret () Real
  (- 1.0))
(define-fun REAL_4 () Real
  (- 1.0))
(define-fun UF_c_1 ((x!0 Int) (x!1 Int) (x!2 Int)) Int
  (ite (and (= x!0 2) (= x!1 3) (= x!2 1)) 0
    (- 2)))
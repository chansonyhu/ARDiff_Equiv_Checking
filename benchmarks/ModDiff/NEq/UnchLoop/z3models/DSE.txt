The symbolic summary of the old method 
(let ((a!1 (UF_c_1 b (UF_c_1 b (UF_c_1 b (UF_c_1 b 0)))))
      (a!5 (+ (UF_c_1 b (UF_c_1 b (UF_c_1 b 0))) 1))
      (a!6 (= Ret (+ (UF_c_1 b (UF_c_1 b 0)) 1)))
      (a!7 (and (>= 1 a) (< 0 a) (= Ret (+ (UF_c_1 b 0) 1)))))
(let ((a!2 (+ (UF_c_1 b (UF_c_1 b (UF_c_1 b a!1))) 1))
      (a!3 (= Ret (+ (UF_c_1 b (UF_c_1 b a!1)) 1)))
      (a!4 (and (>= 5 a)
                (< 4 a)
                (< 3 a)
                (< 2 a)
                (< 1 a)
                (< 0 a)
                (= Ret (+ (UF_c_1 b a!1) 1)))))
  (or (and (>= 7 a)
           (< 6 a)
           (< 5 a)
           (< 4 a)
           (< 3 a)
           (< 2 a)
           (< 1 a)
           (< 0 a)
           (= Ret a!2))
      (and (>= 6 a) (< 5 a) (< 4 a) (< 3 a) (< 2 a) (< 1 a) (< 0 a) a!3)
      a!4
      (and (>= 4 a) (< 3 a) (< 2 a) (< 1 a) (< 0 a) (= Ret (+ a!1 1)))
      (and (>= 3 a) (< 2 a) (< 1 a) (< 0 a) (= Ret a!5))
      (and (>= 2 a) (< 1 a) (< 0 a) a!6)
      a!7
      (and (>= 0 a) (= Ret 1)))))
The symbolic summary of the new method 
(let ((a!1 (UF_c_1 b (UF_c_1 b (UF_c_1 b (UF_c_1 b 1)))))
      (a!4 (= Ret (UF_c_1 b (UF_c_1 b (UF_c_1 b 1)))))
      (a!5 (and (>= 2 (+ a 1))
                (< 1 (+ a 1))
                (< 0 (+ a 1))
                (= Ret (UF_c_1 b (UF_c_1 b 1))))))
(let ((a!2 (= Ret (UF_c_1 b (UF_c_1 b (UF_c_1 b a!1)))))
      (a!3 (and (>= 6 (+ a 1))
                (< 5 (+ a 1))
                (< 4 (+ a 1))
                (< 3 (+ a 1))
                (< 2 (+ a 1))
                (< 1 (+ a 1))
                (< 0 (+ a 1))
                (= Ret (UF_c_1 b (UF_c_1 b a!1))))))
  (or (and (>= 7 (+ a 1))
           (< 6 (+ a 1))
           (< 5 (+ a 1))
           (< 4 (+ a 1))
           (< 3 (+ a 1))
           (< 2 (+ a 1))
           (< 1 (+ a 1))
           (< 0 (+ a 1))
           a!2)
      a!3
      (and (>= 5 (+ a 1))
           (< 4 (+ a 1))
           (< 3 (+ a 1))
           (< 2 (+ a 1))
           (< 1 (+ a 1))
           (< 0 (+ a 1))
           (= Ret (UF_c_1 b a!1)))
      (and (>= 4 (+ a 1))
           (< 3 (+ a 1))
           (< 2 (+ a 1))
           (< 1 (+ a 1))
           (< 0 (+ a 1))
           (= Ret a!1))
      (and (>= 3 (+ a 1)) (< 2 (+ a 1)) (< 1 (+ a 1)) (< 0 (+ a 1)) a!4)
      a!5
      (and (>= 1 (+ a 1)) (< 0 (+ a 1)) (= Ret (UF_c_1 b 1)))
      (and (>= 0 (+ a 1)) (= Ret 1)))))Constraint solving : 
(declare-fun a () Int)
(declare-fun Ret () Int)
(declare-fun b () Int)
(declare-fun UF_c_1 (Int Int ) Int)(let ((a!1 (UF_c_1 b (UF_c_1 b (UF_c_1 b (UF_c_1 b 0)))))
      (a!5 (+ (UF_c_1 b (UF_c_1 b (UF_c_1 b 0))) 1))
      (a!6 (= Ret (+ (UF_c_1 b (UF_c_1 b 0)) 1)))
      (a!7 (and (>= 1 a) (< 0 a) (= Ret (+ (UF_c_1 b 0) 1))))
      (a!9 (UF_c_1 b (UF_c_1 b (UF_c_1 b (UF_c_1 b 1)))))
      (a!12 (= Ret (UF_c_1 b (UF_c_1 b (UF_c_1 b 1)))))
      (a!13 (and (>= 2 (+ a 1))
                 (< 1 (+ a 1))
                 (< 0 (+ a 1))
                 (= Ret (UF_c_1 b (UF_c_1 b 1))))))
(let ((a!2 (+ (UF_c_1 b (UF_c_1 b (UF_c_1 b a!1))) 1))
      (a!3 (= Ret (+ (UF_c_1 b (UF_c_1 b a!1)) 1)))
      (a!4 (and (>= 5 a)
                (< 4 a)
                (< 3 a)
                (< 2 a)
                (< 1 a)
                (< 0 a)
                (= Ret (+ (UF_c_1 b a!1) 1))))
      (a!10 (= Ret (UF_c_1 b (UF_c_1 b (UF_c_1 b a!9)))))
      (a!11 (and (>= 6 (+ a 1))
                 (< 5 (+ a 1))
                 (< 4 (+ a 1))
                 (< 3 (+ a 1))
                 (< 2 (+ a 1))
                 (< 1 (+ a 1))
                 (< 0 (+ a 1))
                 (= Ret (UF_c_1 b (UF_c_1 b a!9))))))
(let ((a!8 (or (and (>= 7 a)
                    (< 6 a)
                    (< 5 a)
                    (< 4 a)
                    (< 3 a)
                    (< 2 a)
                    (< 1 a)
                    (< 0 a)
                    (= Ret a!2))
               (and (>= 6 a)
                    (< 5 a)
                    (< 4 a)
                    (< 3 a)
                    (< 2 a)
                    (< 1 a)
                    (< 0 a)
                    a!3)
               a!4
               (and (>= 4 a) (< 3 a) (< 2 a) (< 1 a) (< 0 a) (= Ret (+ a!1 1)))
               (and (>= 3 a) (< 2 a) (< 1 a) (< 0 a) (= Ret a!5))
               (and (>= 2 a) (< 1 a) (< 0 a) a!6)
               a!7
               (and (>= 0 a) (= Ret 1))))
      (a!14 (or (and (>= 7 (+ a 1))
                     (< 6 (+ a 1))
                     (< 5 (+ a 1))
                     (< 4 (+ a 1))
                     (< 3 (+ a 1))
                     (< 2 (+ a 1))
                     (< 1 (+ a 1))
                     (< 0 (+ a 1))
                     a!10)
                a!11
                (and (>= 5 (+ a 1))
                     (< 4 (+ a 1))
                     (< 3 (+ a 1))
                     (< 2 (+ a 1))
                     (< 1 (+ a 1))
                     (< 0 (+ a 1))
                     (= Ret (UF_c_1 b a!9)))
                (and (>= 4 (+ a 1))
                     (< 3 (+ a 1))
                     (< 2 (+ a 1))
                     (< 1 (+ a 1))
                     (< 0 (+ a 1))
                     (= Ret a!9))
                (and (>= 3 (+ a 1))
                     (< 2 (+ a 1))
                     (< 1 (+ a 1))
                     (< 0 (+ a 1))
                     a!12)
                a!13
                (and (>= 1 (+ a 1)) (< 0 (+ a 1)) (= Ret (UF_c_1 b 1)))
                (and (>= 0 (+ a 1)) (= Ret 1)))))
  (not (= a!8 a!14)))))


Model : 
(define-fun Ret () Int
  1)
(define-fun a () Int
  0)
(define-fun b () Int
  3)
(define-fun UF_c_1 ((x!0 Int) (x!1 Int)) Int
  (ite (and (= x!0 3) (= x!1 8856)) 2438
  (ite (and (= x!0 3) (= x!1 2438)) (- 1)
  (ite (and (= x!0 3) (= x!1 (- 1))) 1237
  (ite (and (= x!0 3) (= x!1 1237)) 7720
  (ite (and (= x!0 3) (= x!1 7720)) 39
  (ite (and (= x!0 3) (= x!1 39)) 1
  (ite (and (= x!0 3) (= x!1 1)) 4
  (ite (and (= x!0 3) (= x!1 4)) 5
  (ite (and (= x!0 3) (= x!1 5)) 6
  (ite (and (= x!0 3) (= x!1 6)) 7
  (ite (and (= x!0 3) (= x!1 7)) 8
  (ite (and (= x!0 3) (= x!1 8)) 9
  (ite (and (= x!0 3) (= x!1 9)) 10
    8856))))))))))))))
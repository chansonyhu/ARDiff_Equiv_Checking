The symbolic summary of the old method 
(or (and (>= x 0) (< x 12) (>= x 9) (= Ret UF_c_1))
    (and (>= x 12) (>= x 9) (= Ret 0))
    (and (< x 9) (= Ret 0)))
The symbolic summary of the new method 
(or (and (>= x 0) (< x 12) (>= x 9) (= Ret UF_c_1))
    (and (>= x 12) (>= x 9) (= Ret 0))
    (and (< x 9) (= Ret 0)))Constraint solving : 
(declare-fun x () Int)
(declare-fun Ret () Int)
(declare-fun UF_c_1 () Int)(let ((a!1 (or (and (>= x 0) (< x 12) (>= x 9) (= Ret UF_c_1))
               (and (>= x 12) (>= x 9) (= Ret 0))
               (and (< x 9) (= Ret 0)))))
  (not (= a!1 a!1)))
